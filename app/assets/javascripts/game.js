// Generated by CoffeeScript 1.9.1
var changeNotification, emphaziseNewGame, getSlotId, parseId;

$(function() {
  var checker, gameboard, playerOneColor, playerTwoColor;
  playerOneColor = 'slot-player-one';
  playerTwoColor = 'slot-player-two';
  gameboard = new Gameboard(playerOneColor, playerTwoColor, 6, 7);
  checker = new LastChipMethod(gameboard.rows, gameboard.columns, 4);
  gameboard.setChecker(checker);
  $('.container-slot').mouseover(function() {
    var col, colSelector;
    col = parseId($(this).attr('id'))['id'];
    colSelector = '.col-' + col;
    $(colSelector).addClass('container-slot-focus');
  });
  $('.container-slot').mouseleave(function() {
    var col, colSelector;
    col = parseId($(this).attr('id'))['id'];
    colSelector = '.col-' + col;
    $(colSelector).removeClass('container-slot-focus');
  });
  return $('.container-slot').click(function() {
    var col, slotId, turnData;
    if (gameboard.finished) {
      return;
    }
    col = parseId($(this).attr('id'))['id'];
    turnData = gameboard.dropChip(col);
    if (turnData['place']['row'] !== -1) {
      slotId = getSlotId(turnData['place']);
      $(slotId).removeClass('slot-empty');
      $(slotId).addClass(turnData["chipColor"]);
      changeNotification(turnData);
    }
  });
});

changeNotification = function(turnData) {
  if (turnData['win']) {
    switch (turnData['player']) {
      case 1:
        $('.notification').html('<h3><font class="notification-font-player-one">PLAYER 1 WINS!</font></h3>');
        break;
      case 2:
        $('.notification').html('<h3><font class="notification-font-player-two">PLAYER 2 WINS!</font></h3>');
    }
    emphaziseNewGame();
  } else if (turnData['draw']) {
    $('.notification').html('<h3><font class="notification-font-draw">ITS A DRAW!</font></h3>');
    emphaziseNewGame();
  } else {
    switch (turnData['player']) {
      case 1:
        $('.notification').html('<h3><font class="notification-font-player-two">PLAYER 2</font> turn</h3>');
        break;
      case 2:
        $('.notification').html('<h3><font class="notification-font-player-one">PLAYER 1</font> turn</h3>');
    }
  }
};

getSlotId = function(slotCoord) {
  var slot;
  slot = '#slot-' + slotCoord['row'] + '-' + slotCoord['col'];
  return slot;
};

parseId = function(idStr) {
  var id, parsedIdStr;
  parsedIdStr = idStr.split('-');
  id = parsedIdStr.pop();
  return {
    id: id,
    parsedIdStr: parsedIdStr
  };
};

emphaziseNewGame = function() {
  $('#new-game').addClass('new-game-emphasis');
};
